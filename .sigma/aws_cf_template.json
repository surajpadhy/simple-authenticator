{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the stack for project simple-authenticator-sigma-sample. Generated by Sigma",
  "Parameters": {
    "lambdaCodeBucketParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket containing the Lambda deployment package"
    },
    "lambdaCodeKeyParameter": {
      "Type": "String",
      "Description": "S3 key of the Lambda deployment package"
    }
  },
  "Outputs": {
    "rdsAuthDatabase": {
      "Description": "DB endpoint of RDS instance authDatabase hosting authDatabase",
      "Value": {
        "Fn::Join": [
          ":",
          [
            {
              "Fn::GetAtt": [
                "rdsAuthDatabase",
                "Endpoint.Address"
              ]
            },
            {
              "Fn::GetAtt": [
                "rdsAuthDatabase",
                "Endpoint.Port"
              ]
            }
          ]
        ]
      }
    },
    "apigauthApisignupPOST": {
      "Description": "URL of auth-api/signup:POST endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apigauthApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            "prod",
            "/signup"
          ]
        ]
      }
    },
    "simpleAuthenticatorSigmaSamplesignupLambda": {
      "Description": "ARN of Lambda function simpleAuthenticatorSigmaSamplesignupLambda",
      "Value": {
        "Fn::GetAtt": [
          "simpleAuthenticatorSigmaSamplesignupLambda",
          "Arn"
        ]
      }
    },
    "apigauthApisigninPOST": {
      "Description": "URL of auth-api/signin:POST endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apigauthApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            "prod",
            "/signin"
          ]
        ]
      }
    },
    "simpleAuthenticatorSigmaSamplesigninLambda": {
      "Description": "ARN of Lambda function simpleAuthenticatorSigmaSamplesigninLambda",
      "Value": {
        "Fn::GetAtt": [
          "simpleAuthenticatorSigmaSamplesigninLambda",
          "Arn"
        ]
      }
    }
  },
  "Resources": {
    "DBSecurityGroupauthDatabase": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "Ingress for CIDRIP",
        "DBSecurityGroupIngress": {
          "CIDRIP": "0.0.0.0/0"
        }
      }
    },
    "rdsAuthDatabase": {
      "Type": "AWS::RDS::DBInstance",
      "DeletionPolicy": "Delete",
      "Properties": {
        "Engine": "mysql",
        "DBInstanceClass": "db.t2.micro",
        "DBInstanceIdentifier": "authDatabase",
        "MasterUsername": "rdsuser",
        "MasterUserPassword": "12345678",
        "DBName": "authDatabase",
        "Port": "3306",
        "PubliclyAccessible": "true",
        "AllocatedStorage": 20,
        "BackupRetentionPeriod": 0,
        "DBSecurityGroups": [
          {
            "Ref": "DBSecurityGroupauthDatabase"
          }
        ],
        "EngineVersion": "5.7.19",
        "LicenseModel": "general-public-license"
      }
    },
    "sigmaQueryDBLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "SigmaQueryDB"
            ]
          ]
        },
        "Description": "Used for running initializing DB queries for RDS. Generated by Sigma.",
        "Code": {
          "S3Bucket": "resources.us-east-1.sigma.slappforge.com",
          "S3Key": "RDS/query-db-lambda.zip"
        },
        "Handler": "index.handler",
        "Timeout": 60,
        "Runtime": "nodejs10.x",
        "Role": {
          "Fn::GetAtt": [
            "sigmaQueryDBLambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "sigmaQueryDBLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "queryLambdaInvokeCRauthDatabase": {
      "Type": "Custom::queryLambdaInvokeCRauthDatabase",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "sigmaQueryDBLambda",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "Query": "CREATE TABLE users\n(\nUserId int NOT NULL AUTO_INCREMENT,\nEmail varchar(255) NOT NULL UNIQUE,\nPassword varchar(255) NOT NULL,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\nPRIMARY KEY (UserId)\n);",
        "Host": {
          "Fn::GetAtt": [
            "rdsAuthDatabase",
            "Endpoint.Address"
          ]
        },
        "Port": "3306",
        "User": "rdsuser",
        "Password": "12345678",
        "Database": "authDatabase"
      }
    },
    "apigauthApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "An API generated by Sigma",
        "Name": "auth-api",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "apigauthApisignin": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "apigauthApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "apigauthApi",
            "RootResourceId"
          ]
        },
        "PathPart": "signin"
      }
    },
    "apigauthApisigninPOST": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "apigauthApi"
        },
        "ResourceId": {
          "Ref": "apigauthApisignin"
        },
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${simpleAuthenticatorSigmaSamplesigninLambda.Arn}/invocations"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            }
          ]
        }
      }
    },
    "apigauthApisignup": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "apigauthApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "apigauthApi",
            "RootResourceId"
          ]
        },
        "PathPart": "signup"
      }
    },
    "apigauthApisignupPOST": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "apigauthApi"
        },
        "ResourceId": {
          "Ref": "apigauthApisignup"
        },
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${simpleAuthenticatorSigmaSamplesignupLambda.Arn}/invocations"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            }
          ]
        }
      }
    },
    "simpleAuthenticatorSigmaSamplesignupLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "simpleAuthenticatorSigmaSamplesignupLambda",
        "Description": "Invokes functions defined in simple-authenticator-sigma-sample/signup-lambda.js in project simple-authenticator-sigma-sample. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "simple-authenticator-sigma-sample/signup-lambda.handler",
        "Timeout": 60,
        "Runtime": "nodejs10.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "simpleAuthenticatorSigmaSamplesignupLambdaExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            },
            "EndPoint_rdsAuthDatabase": {
              "Fn::GetAtt": [
                "rdsAuthDatabase",
                "Endpoint.Address"
              ]
            },
            "Port_rdsAuthDatabase": "3306",
            "User_rdsAuthDatabase": "rdsuser",
            "Password_rdsAuthDatabase": "12345678"
          }
        }
      }
    },
    "simpleAuthenticatorSigmaSamplesignupLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "apigauthApisignupPOSTPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "simpleAuthenticatorSigmaSamplesignupLambda"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
            {
              "__Method__": "POST",
              "__Path__": "/signup",
              "__ApiId__": {
                "Ref": "apigauthApi"
              }
            }
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "simpleAuthenticatorSigmaSamplesigninLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "simpleAuthenticatorSigmaSamplesigninLambda",
        "Description": "Invokes functions defined in simple-authenticator-sigma-sample/signin-lambda.js in project simple-authenticator-sigma-sample. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "simple-authenticator-sigma-sample/signin-lambda.handler",
        "Timeout": 60,
        "Runtime": "nodejs10.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "simpleAuthenticatorSigmaSamplesigninLambdaExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            },
            "EndPoint_rdsAuthDatabase": {
              "Fn::GetAtt": [
                "rdsAuthDatabase",
                "Endpoint.Address"
              ]
            },
            "Port_rdsAuthDatabase": "3306",
            "User_rdsAuthDatabase": "rdsuser",
            "Password_rdsAuthDatabase": "12345678"
          }
        }
      }
    },
    "simpleAuthenticatorSigmaSamplesigninLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "apigauthApisigninPOSTPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "simpleAuthenticatorSigmaSamplesigninLambda"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
            {
              "__Method__": "POST",
              "__Path__": "/signin",
              "__ApiId__": {
                "Ref": "apigauthApi"
              }
            }
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "apigauthApiDeployment1619679994377": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apigauthApi"
        },
        "Description": "An API deployment generated by Sigma for API auth-api",
        "StageName": "prod"
      },
      "DependsOn": [
        "apigauthApisignupPOST",
        "apigauthApisigninPOST"
      ]
    }
  }
}